{"version":3,"file":"AccountPage.js","names":["React","ActionGroup","Button","Form","FormGroup","TextInput","InputGroup","Grid","GridItem","ExpandableSection","ValidatedOptions","PageSection","PageSectionVariants","Text","TextVariants","TextContent","AccountServiceContext","Msg","ContentPage","ContentAlert","LocaleSelector","KeycloakContext","AIACommand","ExternalLinkSquareAltIcon","AccountPage","Component","constructor","props","context","_defineProperty","features","isRegistrationEmailAsUsername","isEditUserNameAllowed","deleteAccountAllowed","updateEmailFeatureEnabled","updateEmailActionEnabled","errors","username","firstName","lastName","email","formFields","attributes","DEFAULT_STATE","fetchPersonalInfo","value","event","target","currentTarget","name","setState","state","validationMessage","preventDefault","form","isValid","checkValidity","reqData","doPost","then","success","locale","window","location","reload","formData","FormData","validationMessages","forEach","key","iterable","elements","keycloak","execute","createElement","isRequired","type","id","maxLength","onChange","handleChange","validated","error","default","isReadOnly","doGet","response","data","render","fields","title","introMessage","isFilled","variant","light","className","component","small","localize","onSubmit","handleSubmit","undefined","label","fieldId","helperTextInvalid","UsernameInput","RestrictedUsernameInput","isUpdateEmailFeatureEnabled","isDisabled","isUpdateEmailActionEnabled","Consumer","onClick","handleEmailUpdate","icon","iconPosition","msgKey","isInternationalizationEnabled","Object","values","filter","e","length","handleCancel","isDeleteAccountAllowed","style","marginTop","toggleText","hasGutter","span","handleDelete"],"sources":["../../../src/app/content/account-page/AccountPage.tsx"],"sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from 'react';\nimport { ActionGroup,\n    Button,\n    Form,\n    FormGroup,\n    TextInput,\n    InputGroup,\n    Grid,\n    GridItem,\n    ExpandableSection,\n    ValidatedOptions,\n    PageSection,\n    PageSectionVariants,\n    Text,\n    TextVariants,\n    TextContent\n} from '@patternfly/react-core';\n\nimport { HttpResponse } from '../../account-service/account.service';\nimport { AccountServiceContext } from '../../account-service/AccountServiceContext';\nimport { Features } from '../../widgets/features';\nimport { Msg } from '../../widgets/Msg';\nimport { ContentPage } from '../ContentPage';\nimport { ContentAlert } from '../ContentAlert';\nimport { LocaleSelector } from '../../widgets/LocaleSelectors';\nimport { KeycloakContext } from '../../keycloak-service/KeycloakContext';\nimport { KeycloakService } from '../../keycloak-service/keycloak.service';\nimport { AIACommand } from '../../util/AIACommand';\nimport {ExternalLinkSquareAltIcon} from \"@patternfly/react-icons\";\n\ndeclare const features: Features;\ndeclare const locale: string;\n\ninterface AccountPageProps {\n}\n\ninterface FormFields {\n    readonly username?: string;\n    readonly firstName?: string;\n    readonly lastName?: string;\n    readonly email?: string;\n    attributes?: { locale?: [string] };\n}\n\ninterface AccountPageState {\n    readonly errors: FormFields;\n    readonly formFields: FormFields;\n}\n\n/**\n * @author Stan Silvert ssilvert@redhat.com (C) 2018 Red Hat Inc.\n */\nexport class AccountPage extends React.Component<AccountPageProps, AccountPageState> {\n    static contextType = AccountServiceContext;\n    context: React.ContextType<typeof AccountServiceContext>;\n    private isRegistrationEmailAsUsername: boolean = features.isRegistrationEmailAsUsername;\n    private isEditUserNameAllowed: boolean = features.isEditUserNameAllowed;\n    private isDeleteAccountAllowed: boolean = features.deleteAccountAllowed;\n    private isUpdateEmailFeatureEnabled: boolean = features.updateEmailFeatureEnabled;\n    private isUpdateEmailActionEnabled: boolean = features.updateEmailActionEnabled;\n    private readonly DEFAULT_STATE: AccountPageState = {\n        errors: {\n            username: '',\n            firstName: '',\n            lastName: '',\n            email: ''\n        },\n        formFields: {\n            username: '',\n            firstName: '',\n            lastName: '',\n            email: '',\n            attributes: {}\n        }\n    };\n\n    public state: AccountPageState = this.DEFAULT_STATE;\n\n    public constructor(props: AccountPageProps, context: React.ContextType<typeof AccountServiceContext>) {\n        super(props);\n        this.context = context;\n\n        this.fetchPersonalInfo();\n    }\n\n    private fetchPersonalInfo(): void {\n        this.context!.doGet<FormFields>(\"/\")\n            .then((response: HttpResponse<FormFields>) => {\n                this.setState(this.DEFAULT_STATE);\n                const formFields = response.data;\n                if (!formFields!.attributes) {\n                    formFields!.attributes = { locale: [locale] };\n                }\n                else if (!formFields!.attributes.locale) {\n                    formFields!.attributes.locale = [locale];\n                }\n\n                this.setState({...{ formFields: formFields as FormFields }});\n            });\n    }\n\n    private handleCancel = (): void => {\n        this.fetchPersonalInfo();\n    }\n\n    private handleChange = (value: string, event: React.FormEvent<HTMLInputElement>) => {\n        const target = event.currentTarget;\n        const name = target.name;\n\n        this.setState({\n            errors: { ...this.state.errors, [name]: target.validationMessage },\n            formFields: { ...this.state.formFields, [name]: value }\n        });\n    }\n\n    private handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\n        event.preventDefault();\n        const form = event.target as HTMLFormElement;\n        const isValid = form.checkValidity();\n        if (isValid) {\n            const reqData: FormFields = { ...this.state.formFields };\n            this.context!.doPost<void>(\"/\", reqData)\n                .then(() => {\n                    ContentAlert.success('accountUpdatedMessage');\n                    if (locale !== this.state.formFields.attributes!.locale![0]) {\n                        window.location.reload();\n                    }\n                });\n        } else {\n            const formData = new FormData(form);\n            const validationMessages: FormFields = {};\n\n            formData.forEach((value, key, iterable) => {\n                validationMessages[key] = form.elements[key].validationMessage\n            })\n\n            // const validationMessages = Array.from(formData.).reduce((acc, key) => {\n            //     acc[key] = form.elements[key].validationMessage\n            //     return acc\n            // }, {});\n            //\n\n            this.setState({\n                errors: { ...validationMessages },\n                formFields: this.state.formFields\n            });\n        }\n\n    }\n\n    private handleDelete = (keycloak: KeycloakService): void => {\n        new AIACommand(keycloak, \"delete_account\").execute();\n    }\n\n    private handleEmailUpdate = (keycloak: KeycloakService): void => {\n        new AIACommand(keycloak, \"UPDATE_EMAIL\").execute();\n    }\n\n    public render(): React.ReactNode {\n        const fields: FormFields = this.state.formFields;\n        return (\n            <ContentPage\n                title=\"personalInfoHtmlTitle\"\n                introMessage=\"personalSubMessage\"\n            >\n                <PageSection isFilled variant={PageSectionVariants.light}>\n                    <TextContent className=\"pf-u-mb-lg\">\n                        <Text component={TextVariants.small}>\n                          {Msg.localize('allFieldsRequired')}\n                        </Text>\n                    </TextContent>\n\n                    <TextContent className=\"pf-u-mb-lg\">\n                        <Text component={TextVariants.small}>\n                            {Msg.localize('timothyVogelStartPage')}\n                        </Text>\n                    </TextContent>\n                    <Form\n                        onSubmit={(event) => this.handleSubmit(event)}\n                        className=\"personal-info-form\"\n                    >\n                        {!this.isRegistrationEmailAsUsername && fields.username != undefined && (\n                            <FormGroup\n                                label={Msg.localize(\"username\")}\n                                fieldId=\"user-name\"\n                                helperTextInvalid={this.state.errors.username}\n                                validated={\n                                    this.state.errors.username !== \"\"\n                                        ? ValidatedOptions.error\n                                        : ValidatedOptions.default\n                                }\n                            >\n                                {this.isEditUserNameAllowed && <this.UsernameInput />}\n                                {!this.isEditUserNameAllowed && (\n                                    <this.RestrictedUsernameInput />\n                                )}\n                            </FormGroup>\n                        )}\n                        {!this.isUpdateEmailFeatureEnabled && <FormGroup\n                            label={Msg.localize('email')}\n                            fieldId=\"email-address\"\n                            helperTextInvalid={this.state.errors.email}\n                            validated={\n                                this.state.errors.email !== \"\"\n                                    ? ValidatedOptions.error\n                                    : ValidatedOptions.default\n                            }\n                        >\n                            <TextInput\n                                isRequired\n                                type=\"email\"\n                                id=\"email-address\"\n                                name=\"email\"\n                                maxLength={254}\n                                value={fields.email}\n                                onChange={this.handleChange}\n                                validated={\n                                    this.state.errors.email !== \"\"\n                                        ? ValidatedOptions.error\n                                        : ValidatedOptions.default\n                                }\n                            ></TextInput>\n                        </FormGroup> }\n                        {this.isUpdateEmailFeatureEnabled && <FormGroup\n                            label={Msg.localize('email')}\n                            fieldId=\"email-address\"\n                        >\n                            <InputGroup>\n                                <TextInput\n                                    isDisabled\n                                    type=\"email\"\n                                    id=\"email-address\"\n                                    name=\"email\"\n                                    value={fields.email}\n                                >\n                                </TextInput>\n                                {this.isUpdateEmailActionEnabled && (!this.isRegistrationEmailAsUsername || this.isEditUserNameAllowed) &&\n                                    <KeycloakContext.Consumer>\n                                        { (keycloak) => (\n                                            <Button id=\"update-email-btn\"\n                                                    variant=\"link\"\n                                                    onClick={() => this.handleEmailUpdate(keycloak!)}\n                                                    icon={<ExternalLinkSquareAltIcon/>}\n                                                    iconPosition=\"right\">\n                                                <Msg msgKey=\"updateEmail\" />\n                                            </Button>\n                                        )}\n                                    </KeycloakContext.Consumer>\n                                }\n                            </InputGroup>\n                        </FormGroup> }\n                        <FormGroup\n                            label={Msg.localize(\"firstName\")}\n                            fieldId=\"first-name\"\n                            helperTextInvalid={this.state.errors.firstName}\n                            validated={\n                                this.state.errors.firstName !== \"\"\n                                    ? ValidatedOptions.error\n                                    : ValidatedOptions.default\n                            }\n                        >\n                            <TextInput\n                                isRequired\n                                type=\"text\"\n                                id=\"first-name\"\n                                name=\"firstName\"\n                                maxLength={254}\n                                value={fields.firstName}\n                                onChange={this.handleChange}\n                                validated={\n                                    this.state.errors.firstName !== \"\"\n                                        ? ValidatedOptions.error\n                                        : ValidatedOptions.default\n                                }\n                            ></TextInput>\n                        </FormGroup>\n                        <FormGroup\n                            label={Msg.localize(\"lastName\")}\n                            fieldId=\"last-name\"\n                            helperTextInvalid={this.state.errors.lastName}\n                            validated={\n                                this.state.errors.lastName !== \"\"\n                                    ? ValidatedOptions.error\n                                    : ValidatedOptions.default\n                            }\n                        >\n                            <TextInput\n                                isRequired\n                                type=\"text\"\n                                id=\"last-name\"\n                                name=\"lastName\"\n                                maxLength={254}\n                                value={fields.lastName}\n                                onChange={this.handleChange}\n                                validated={\n                                    this.state.errors.lastName !== \"\"\n                                        ? ValidatedOptions.error\n                                        : ValidatedOptions.default\n                                }\n                            ></TextInput>\n                        </FormGroup>\n                        {features.isInternationalizationEnabled && (\n                            <FormGroup\n                                label={Msg.localize(\"selectLocale\")}\n                                isRequired\n                                fieldId=\"locale\"\n                            >\n                                <LocaleSelector\n                                    id=\"locale-selector\"\n                                    value={fields.attributes!.locale || \"\"}\n                                    onChange={(value) =>\n                                        this.setState({\n                                            errors: this.state.errors,\n                                            formFields: {\n                                                ...this.state.formFields,\n                                                attributes: {\n                                                    ...this.state.formFields.attributes,\n                                                    locale: [value],\n                                    },\n                                    },\n                                    })\n                                    }\n                                />\n                            </FormGroup>\n                        )}\n                        <ActionGroup>\n                            <Button\n                                type=\"submit\"\n                                id=\"save-btn\"\n                                variant=\"primary\"\n                                isDisabled={\n                                    Object.values(this.state.errors).filter((e) => e !== \"\")\n                                    .length !== 0\n                                }\n                            >\n                                <Msg msgKey=\"doSave\" />\n                            </Button>\n                            <Button\n                                id=\"cancel-btn\"\n                                variant=\"link\"\n                                onClick={this.handleCancel}\n                            >\n                                <Msg msgKey=\"doCancel\" />\n                            </Button>\n                        </ActionGroup>\n                    </Form>\n\n            {this.isDeleteAccountAllowed && (\n                <div id=\"delete-account\" style={{ marginTop: \"30px\" }}>\n                    <ExpandableSection toggleText={Msg.localize(\"deleteAccount\")}>\n                        <Grid hasGutter>\n                            <GridItem span={6}>\n                                <p>\n                                    <Msg msgKey=\"deleteAccountWarning\" />\n                                </p>\n                            </GridItem>\n                            <GridItem span={4}>\n                                <KeycloakContext.Consumer>\n                                    {(keycloak) => (\n                                        <Button\n                                            id=\"delete-account-btn\"\n                                            variant=\"danger\"\n                                            onClick={() => this.handleDelete(keycloak!)}\n                                            className=\"delete-button\"\n                                        >\n                                            <Msg msgKey=\"doDelete\" />\n                                        </Button>\n                                    )}\n                                </KeycloakContext.Consumer>\n                            </GridItem>\n                            <GridItem span={2}></GridItem>\n                        </Grid>\n                    </ExpandableSection>\n                </div>\n            )}\n            </PageSection>\n        </ContentPage>\n        );\n    }\n\n    private UsernameInput = () => (\n        <TextInput\n            isRequired\n            type=\"text\"\n            id=\"user-name\"\n            name=\"username\"\n            maxLength={254}\n            value={this.state.formFields.username}\n            onChange={this.handleChange}\n            validated={this.state.errors.username !== '' ? ValidatedOptions.error : ValidatedOptions.default}\n            >\n        </TextInput>\n    );\n\n    private RestrictedUsernameInput = () => (\n        <TextInput\n            isReadOnly\n            type=\"text\"\n            id=\"user-name\"\n            name=\"username\"\n            value={this.state.formFields.username}\n        >\n        </TextInput>\n    );\n};\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK;AACjB,SAASC,WAAW,EAChBC,MAAM,EACNC,IAAI,EACJC,SAAS,EACTC,SAAS,EACTC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,iBAAiB,EACjBC,gBAAgB,EAChBC,WAAW,EACXC,mBAAmB,EACnBC,IAAI,EACJC,YAAY,EACZC,WAAW;AAIf,SAASC,qBAAqB;AAE9B,SAASC,GAAG;AACZ,SAASC,WAAW;AACpB,SAASC,YAAY;AACrB,SAASC,cAAc;AACvB,SAASC,eAAe;AAExB,SAASC,UAAU;AACnB,SAAQC,yBAAyB;AAqBjC;AACA;AACA;AACA,OAAO,MAAMC,WAAW,SAASxB,KAAK,CAACyB,SAAS,CAAqC;EA0B1EC,WAAWA,CAACC,KAAuB,EAAEC,OAAwD,EAAE;IAClG,KAAK,CAACD,KAAK,CAAC;IAACE,eAAA;IAAAA,eAAA,wCAxBgCC,QAAQ,CAACC,6BAA6B;IAAAF,eAAA,gCAC9CC,QAAQ,CAACE,qBAAqB;IAAAH,eAAA,iCAC7BC,QAAQ,CAACG,oBAAoB;IAAAJ,eAAA,sCACxBC,QAAQ,CAACI,yBAAyB;IAAAL,eAAA,qCACnCC,QAAQ,CAACK,wBAAwB;IAAAN,eAAA,wBAC5B;MAC/CO,MAAM,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;MACX,CAAC;MACDC,UAAU,EAAE;QACRJ,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTE,UAAU,EAAE,CAAC;MACjB;IACJ,CAAC;IAAAb,eAAA,gBAEgC,IAAI,CAACc,aAAa;IAAAd,eAAA,uBAyB5B,MAAY;MAC/B,IAAI,CAACe,iBAAiB,CAAC,CAAC;IAC5B,CAAC;IAAAf,eAAA,uBAEsB,CAACgB,KAAa,EAAEC,KAAwC,KAAK;MAChF,MAAMC,MAAM,GAAGD,KAAK,CAACE,aAAa;MAClC,MAAMC,IAAI,GAAGF,MAAM,CAACE,IAAI;MAExB,IAAI,CAACC,QAAQ,CAAC;QACVd,MAAM,EAAE;UAAE,GAAG,IAAI,CAACe,KAAK,CAACf,MAAM;UAAE,CAACa,IAAI,GAAGF,MAAM,CAACK;QAAkB,CAAC;QAClEX,UAAU,EAAE;UAAE,GAAG,IAAI,CAACU,KAAK,CAACV,UAAU;UAAE,CAACQ,IAAI,GAAGJ;QAAM;MAC1D,CAAC,CAAC;IACN,CAAC;IAAAhB,eAAA,uBAEuBiB,KAAuC,IAAW;MACtEA,KAAK,CAACO,cAAc,CAAC,CAAC;MACtB,MAAMC,IAAI,GAAGR,KAAK,CAACC,MAAyB;MAC5C,MAAMQ,OAAO,GAAGD,IAAI,CAACE,aAAa,CAAC,CAAC;MACpC,IAAID,OAAO,EAAE;QACT,MAAME,OAAmB,GAAG;UAAE,GAAG,IAAI,CAACN,KAAK,CAACV;QAAW,CAAC;QACxD,IAAI,CAACb,OAAO,CAAE8B,MAAM,CAAO,GAAG,EAAED,OAAO,CAAC,CACnCE,IAAI,CAAC,MAAM;UACRxC,YAAY,CAACyC,OAAO,CAAC,uBAAuB,CAAC;UAC7C,IAAIC,MAAM,KAAK,IAAI,CAACV,KAAK,CAACV,UAAU,CAACC,UAAU,CAAEmB,MAAM,CAAE,CAAC,CAAC,EAAE;YACzDC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;UAC5B;QACJ,CAAC,CAAC;MACV,CAAC,MAAM;QACH,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACZ,IAAI,CAAC;QACnC,MAAMa,kBAA8B,GAAG,CAAC,CAAC;QAEzCF,QAAQ,CAACG,OAAO,CAAC,CAACvB,KAAK,EAAEwB,GAAG,EAAEC,QAAQ,KAAK;UACvCH,kBAAkB,CAACE,GAAG,CAAC,GAAGf,IAAI,CAACiB,QAAQ,CAACF,GAAG,CAAC,CAACjB,iBAAiB;QAClE,CAAC,CAAC;;QAEF;QACA;QACA;QACA;QACA;;QAEA,IAAI,CAACF,QAAQ,CAAC;UACVd,MAAM,EAAE;YAAE,GAAG+B;UAAmB,CAAC;UACjC1B,UAAU,EAAE,IAAI,CAACU,KAAK,CAACV;QAC3B,CAAC,CAAC;MACN;IAEJ,CAAC;IAAAZ,eAAA,uBAEuB2C,QAAyB,IAAW;MACxD,IAAIlD,UAAU,CAACkD,QAAQ,EAAE,gBAAgB,CAAC,CAACC,OAAO,CAAC,CAAC;IACxD,CAAC;IAAA5C,eAAA,4BAE4B2C,QAAyB,IAAW;MAC7D,IAAIlD,UAAU,CAACkD,QAAQ,EAAE,cAAc,CAAC,CAACC,OAAO,CAAC,CAAC;IACtD,CAAC;IAAA5C,eAAA,wBAgOuB,mBACpB7B,KAAA,CAAA0E,aAAA,CAACrE,SAAS;MACNsE,UAAU;MACVC,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,WAAW;MACd5B,IAAI,EAAC,UAAU;MACf6B,SAAS,EAAE,GAAI;MACfjC,KAAK,EAAE,IAAI,CAACM,KAAK,CAACV,UAAU,CAACJ,QAAS;MACtC0C,QAAQ,EAAE,IAAI,CAACC,YAAa;MAC5BC,SAAS,EAAE,IAAI,CAAC9B,KAAK,CAACf,MAAM,CAACC,QAAQ,KAAK,EAAE,GAAG3B,gBAAgB,CAACwE,KAAK,GAAGxE,gBAAgB,CAACyE;IAAQ,CAE1F,CACd;IAAAtD,eAAA,kCAEiC,mBAC9B7B,KAAA,CAAA0E,aAAA,CAACrE,SAAS;MACN+E,UAAU;MACVR,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,WAAW;MACd5B,IAAI,EAAC,UAAU;MACfJ,KAAK,EAAE,IAAI,CAACM,KAAK,CAACV,UAAU,CAACJ;IAAS,CAE/B,CACd;IAnUG,IAAI,CAACT,OAAO,GAAGA,OAAO;IAEtB,IAAI,CAACgB,iBAAiB,CAAC,CAAC;EAC5B;EAEQA,iBAAiBA,CAAA,EAAS;IAC9B,IAAI,CAAChB,OAAO,CAAEyD,KAAK,CAAa,GAAG,CAAC,CAC/B1B,IAAI,CAAE2B,QAAkC,IAAK;MAC1C,IAAI,CAACpC,QAAQ,CAAC,IAAI,CAACP,aAAa,CAAC;MACjC,MAAMF,UAAU,GAAG6C,QAAQ,CAACC,IAAI;MAChC,IAAI,CAAC9C,UAAU,CAAEC,UAAU,EAAE;QACzBD,UAAU,CAAEC,UAAU,GAAG;UAAEmB,MAAM,EAAE,CAACA,MAAM;QAAE,CAAC;MACjD,CAAC,MACI,IAAI,CAACpB,UAAU,CAAEC,UAAU,CAACmB,MAAM,EAAE;QACrCpB,UAAU,CAAEC,UAAU,CAACmB,MAAM,GAAG,CAACA,MAAM,CAAC;MAC5C;MAEA,IAAI,CAACX,QAAQ,CAAC;QAAC,GAAG;UAAET,UAAU,EAAEA;QAAyB;MAAC,CAAC,CAAC;IAChE,CAAC,CAAC;EACV;EA2DO+C,MAAMA,CAAA,EAAoB;IAC7B,MAAMC,MAAkB,GAAG,IAAI,CAACtC,KAAK,CAACV,UAAU;IAChD,oBACIzC,KAAA,CAAA0E,aAAA,CAACxD,WAAW;MACRwE,KAAK,EAAC,uBAAuB;MAC7BC,YAAY,EAAC;IAAoB,gBAEjC3F,KAAA,CAAA0E,aAAA,CAAC/D,WAAW;MAACiF,QAAQ;MAACC,OAAO,EAAEjF,mBAAmB,CAACkF;IAAM,gBACrD9F,KAAA,CAAA0E,aAAA,CAAC3D,WAAW;MAACgF,SAAS,EAAC;IAAY,gBAC/B/F,KAAA,CAAA0E,aAAA,CAAC7D,IAAI;MAACmF,SAAS,EAAElF,YAAY,CAACmF;IAAM,GACjChF,GAAG,CAACiF,QAAQ,CAAC,mBAAmB,CAC7B,CACG,CAAC,eAEdlG,KAAA,CAAA0E,aAAA,CAAC3D,WAAW;MAACgF,SAAS,EAAC;IAAY,gBAC/B/F,KAAA,CAAA0E,aAAA,CAAC7D,IAAI;MAACmF,SAAS,EAAElF,YAAY,CAACmF;IAAM,GAC/BhF,GAAG,CAACiF,QAAQ,CAAC,uBAAuB,CACnC,CACG,CAAC,eACdlG,KAAA,CAAA0E,aAAA,CAACvE,IAAI;MACDgG,QAAQ,EAAGrD,KAAK,IAAK,IAAI,CAACsD,YAAY,CAACtD,KAAK,CAAE;MAC9CiD,SAAS,EAAC;IAAoB,GAE7B,CAAC,IAAI,CAAChE,6BAA6B,IAAI0D,MAAM,CAACpD,QAAQ,IAAIgE,SAAS,iBAChErG,KAAA,CAAA0E,aAAA,CAACtE,SAAS;MACNkG,KAAK,EAAErF,GAAG,CAACiF,QAAQ,CAAC,UAAU,CAAE;MAChCK,OAAO,EAAC,WAAW;MACnBC,iBAAiB,EAAE,IAAI,CAACrD,KAAK,CAACf,MAAM,CAACC,QAAS;MAC9C4C,SAAS,EACL,IAAI,CAAC9B,KAAK,CAACf,MAAM,CAACC,QAAQ,KAAK,EAAE,GAC3B3B,gBAAgB,CAACwE,KAAK,GACtBxE,gBAAgB,CAACyE;IAC1B,GAEA,IAAI,CAACnD,qBAAqB,iBAAIhC,KAAA,CAAA0E,aAAA,MAAM+B,aAAa,MAAE,CAAC,EACpD,CAAC,IAAI,CAACzE,qBAAqB,iBACxBhC,KAAA,CAAA0E,aAAA,MAAMgC,uBAAuB,MAAE,CAE5B,CACd,EACA,CAAC,IAAI,CAACC,2BAA2B,iBAAI3G,KAAA,CAAA0E,aAAA,CAACtE,SAAS;MAC5CkG,KAAK,EAAErF,GAAG,CAACiF,QAAQ,CAAC,OAAO,CAAE;MAC7BK,OAAO,EAAC,eAAe;MACvBC,iBAAiB,EAAE,IAAI,CAACrD,KAAK,CAACf,MAAM,CAACI,KAAM;MAC3CyC,SAAS,EACL,IAAI,CAAC9B,KAAK,CAACf,MAAM,CAACI,KAAK,KAAK,EAAE,GACxB9B,gBAAgB,CAACwE,KAAK,GACtBxE,gBAAgB,CAACyE;IAC1B,gBAEDnF,KAAA,CAAA0E,aAAA,CAACrE,SAAS;MACNsE,UAAU;MACVC,IAAI,EAAC,OAAO;MACZC,EAAE,EAAC,eAAe;MAClB5B,IAAI,EAAC,OAAO;MACZ6B,SAAS,EAAE,GAAI;MACfjC,KAAK,EAAE4C,MAAM,CAACjD,KAAM;MACpBuC,QAAQ,EAAE,IAAI,CAACC,YAAa;MAC5BC,SAAS,EACL,IAAI,CAAC9B,KAAK,CAACf,MAAM,CAACI,KAAK,KAAK,EAAE,GACxB9B,gBAAgB,CAACwE,KAAK,GACtBxE,gBAAgB,CAACyE;IAC1B,CACO,CACL,CAAC,EACX,IAAI,CAACwB,2BAA2B,iBAAI3G,KAAA,CAAA0E,aAAA,CAACtE,SAAS;MAC3CkG,KAAK,EAAErF,GAAG,CAACiF,QAAQ,CAAC,OAAO,CAAE;MAC7BK,OAAO,EAAC;IAAe,gBAEvBvG,KAAA,CAAA0E,aAAA,CAACpE,UAAU,qBACPN,KAAA,CAAA0E,aAAA,CAACrE,SAAS;MACNuG,UAAU;MACVhC,IAAI,EAAC,OAAO;MACZC,EAAE,EAAC,eAAe;MAClB5B,IAAI,EAAC,OAAO;MACZJ,KAAK,EAAE4C,MAAM,CAACjD;IAAM,CAEb,CAAC,EACX,IAAI,CAACqE,0BAA0B,KAAK,CAAC,IAAI,CAAC9E,6BAA6B,IAAI,IAAI,CAACC,qBAAqB,CAAC,iBACnGhC,KAAA,CAAA0E,aAAA,CAACrD,eAAe,CAACyF,QAAQ,QAClBtC,QAAQ,iBACPxE,KAAA,CAAA0E,aAAA,CAACxE,MAAM;MAAC2E,EAAE,EAAC,kBAAkB;MACrBgB,OAAO,EAAC,MAAM;MACdkB,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACC,iBAAiB,CAACxC,QAAS,CAAE;MACjDyC,IAAI,eAAEjH,KAAA,CAAA0E,aAAA,CAACnD,yBAAyB,MAAC,CAAE;MACnC2F,YAAY,EAAC;IAAO,gBACxBlH,KAAA,CAAA0E,aAAA,CAACzD,GAAG;MAACkG,MAAM,EAAC;IAAa,CAAE,CACvB,CAEU,CAEtB,CACL,CAAC,eACZnH,KAAA,CAAA0E,aAAA,CAACtE,SAAS;MACNkG,KAAK,EAAErF,GAAG,CAACiF,QAAQ,CAAC,WAAW,CAAE;MACjCK,OAAO,EAAC,YAAY;MACpBC,iBAAiB,EAAE,IAAI,CAACrD,KAAK,CAACf,MAAM,CAACE,SAAU;MAC/C2C,SAAS,EACL,IAAI,CAAC9B,KAAK,CAACf,MAAM,CAACE,SAAS,KAAK,EAAE,GAC5B5B,gBAAgB,CAACwE,KAAK,GACtBxE,gBAAgB,CAACyE;IAC1B,gBAEDnF,KAAA,CAAA0E,aAAA,CAACrE,SAAS;MACNsE,UAAU;MACVC,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,YAAY;MACf5B,IAAI,EAAC,WAAW;MAChB6B,SAAS,EAAE,GAAI;MACfjC,KAAK,EAAE4C,MAAM,CAACnD,SAAU;MACxByC,QAAQ,EAAE,IAAI,CAACC,YAAa;MAC5BC,SAAS,EACL,IAAI,CAAC9B,KAAK,CAACf,MAAM,CAACE,SAAS,KAAK,EAAE,GAC5B5B,gBAAgB,CAACwE,KAAK,GACtBxE,gBAAgB,CAACyE;IAC1B,CACO,CACL,CAAC,eACZnF,KAAA,CAAA0E,aAAA,CAACtE,SAAS;MACNkG,KAAK,EAAErF,GAAG,CAACiF,QAAQ,CAAC,UAAU,CAAE;MAChCK,OAAO,EAAC,WAAW;MACnBC,iBAAiB,EAAE,IAAI,CAACrD,KAAK,CAACf,MAAM,CAACG,QAAS;MAC9C0C,SAAS,EACL,IAAI,CAAC9B,KAAK,CAACf,MAAM,CAACG,QAAQ,KAAK,EAAE,GAC3B7B,gBAAgB,CAACwE,KAAK,GACtBxE,gBAAgB,CAACyE;IAC1B,gBAEDnF,KAAA,CAAA0E,aAAA,CAACrE,SAAS;MACNsE,UAAU;MACVC,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,WAAW;MACd5B,IAAI,EAAC,UAAU;MACf6B,SAAS,EAAE,GAAI;MACfjC,KAAK,EAAE4C,MAAM,CAAClD,QAAS;MACvBwC,QAAQ,EAAE,IAAI,CAACC,YAAa;MAC5BC,SAAS,EACL,IAAI,CAAC9B,KAAK,CAACf,MAAM,CAACG,QAAQ,KAAK,EAAE,GAC3B7B,gBAAgB,CAACwE,KAAK,GACtBxE,gBAAgB,CAACyE;IAC1B,CACO,CACL,CAAC,EACXrD,QAAQ,CAACsF,6BAA6B,iBACnCpH,KAAA,CAAA0E,aAAA,CAACtE,SAAS;MACNkG,KAAK,EAAErF,GAAG,CAACiF,QAAQ,CAAC,cAAc,CAAE;MACpCvB,UAAU;MACV4B,OAAO,EAAC;IAAQ,gBAEhBvG,KAAA,CAAA0E,aAAA,CAACtD,cAAc;MACXyD,EAAE,EAAC,iBAAiB;MACpBhC,KAAK,EAAE4C,MAAM,CAAC/C,UAAU,CAAEmB,MAAM,IAAI,EAAG;MACvCkB,QAAQ,EAAGlC,KAAK,IACZ,IAAI,CAACK,QAAQ,CAAC;QACVd,MAAM,EAAE,IAAI,CAACe,KAAK,CAACf,MAAM;QACzBK,UAAU,EAAE;UACR,GAAG,IAAI,CAACU,KAAK,CAACV,UAAU;UACxBC,UAAU,EAAE;YACR,GAAG,IAAI,CAACS,KAAK,CAACV,UAAU,CAACC,UAAU;YACnCmB,MAAM,EAAE,CAAChB,KAAK;UAC9B;QACA;MACA,CAAC;IACA,CACJ,CACM,CACd,eACD7C,KAAA,CAAA0E,aAAA,CAACzE,WAAW,qBACRD,KAAA,CAAA0E,aAAA,CAACxE,MAAM;MACH0E,IAAI,EAAC,QAAQ;MACbC,EAAE,EAAC,UAAU;MACbgB,OAAO,EAAC,SAAS;MACjBe,UAAU,EACNS,MAAM,CAACC,MAAM,CAAC,IAAI,CAACnE,KAAK,CAACf,MAAM,CAAC,CAACmF,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAK,EAAE,CAAC,CACvDC,MAAM,KAAK;IACf,gBAEDzH,KAAA,CAAA0E,aAAA,CAACzD,GAAG;MAACkG,MAAM,EAAC;IAAQ,CAAE,CAClB,CAAC,eACTnH,KAAA,CAAA0E,aAAA,CAACxE,MAAM;MACH2E,EAAE,EAAC,YAAY;MACfgB,OAAO,EAAC,MAAM;MACdkB,OAAO,EAAE,IAAI,CAACW;IAAa,gBAE3B1H,KAAA,CAAA0E,aAAA,CAACzD,GAAG;MAACkG,MAAM,EAAC;IAAU,CAAE,CACpB,CACC,CACX,CAAC,EAEd,IAAI,CAACQ,sBAAsB,iBACxB3H,KAAA,CAAA0E,aAAA;MAAKG,EAAE,EAAC,gBAAgB;MAAC+C,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO;IAAE,gBAClD7H,KAAA,CAAA0E,aAAA,CAACjE,iBAAiB;MAACqH,UAAU,EAAE7G,GAAG,CAACiF,QAAQ,CAAC,eAAe;IAAE,gBACzDlG,KAAA,CAAA0E,aAAA,CAACnE,IAAI;MAACwH,SAAS;IAAA,gBACX/H,KAAA,CAAA0E,aAAA,CAAClE,QAAQ;MAACwH,IAAI,EAAE;IAAE,gBACdhI,KAAA,CAAA0E,aAAA,yBACI1E,KAAA,CAAA0E,aAAA,CAACzD,GAAG;MAACkG,MAAM,EAAC;IAAsB,CAAE,CACrC,CACG,CAAC,eACXnH,KAAA,CAAA0E,aAAA,CAAClE,QAAQ;MAACwH,IAAI,EAAE;IAAE,gBACdhI,KAAA,CAAA0E,aAAA,CAACrD,eAAe,CAACyF,QAAQ,QACnBtC,QAAQ,iBACNxE,KAAA,CAAA0E,aAAA,CAACxE,MAAM;MACH2E,EAAE,EAAC,oBAAoB;MACvBgB,OAAO,EAAC,QAAQ;MAChBkB,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACkB,YAAY,CAACzD,QAAS,CAAE;MAC5CuB,SAAS,EAAC;IAAe,gBAEzB/F,KAAA,CAAA0E,aAAA,CAACzD,GAAG;MAACkG,MAAM,EAAC;IAAU,CAAE,CACpB,CAEU,CACpB,CAAC,eACXnH,KAAA,CAAA0E,aAAA,CAAClE,QAAQ;MAACwH,IAAI,EAAE;IAAE,CAAW,CAC3B,CACS,CAClB,CAEI,CACJ,CAAC;EAElB;AA0BJ;AAACnG,eAAA,CAhWYL,WAAW,iBACCR,qBAAqB;AA+V7C"}